// <auto-generated />

using System;
using DatingAPI.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

namespace DatingAPI.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    internal class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("DatingAPI.Logger.Log", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<DateTime>("Date")
                    .HasColumnType("TEXT");

                b.Property<string>("IpAddress")
                    .HasColumnType("TEXT");

                b.Property<string>("Message")
                    .HasColumnType("TEXT");

                b.Property<int>("Type")
                    .HasColumnType("INTEGER");

                b.HasKey("Id");

                b.ToTable("Logs");
            });

            modelBuilder.Entity("DatingAPI.Models.Photo", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<DateTime>("AddedAt")
                    .HasColumnType("TEXT");

                b.Property<string>("Description")
                    .HasColumnType("TEXT");

                b.Property<bool>("IsMain")
                    .HasColumnType("INTEGER");

                b.Property<string>("PublicId")
                    .HasColumnType("TEXT");

                b.Property<string>("Url")
                    .HasColumnType("TEXT");

                b.Property<int>("UserId")
                    .HasColumnType("INTEGER");

                b.HasKey("Id");

                b.HasIndex("UserId");

                b.ToTable("Photos");
            });

            modelBuilder.Entity("DatingAPI.Models.User", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<DateTime>("Birthday")
                    .HasColumnType("TEXT");

                b.Property<string>("City")
                    .HasColumnType("TEXT");

                b.Property<string>("Country")
                    .HasColumnType("TEXT");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("TEXT");

                b.Property<string>("Gender")
                    .HasColumnType("TEXT");

                b.Property<string>("Interests")
                    .HasColumnType("TEXT");

                b.Property<string>("Introduction")
                    .HasColumnType("TEXT");

                b.Property<string>("KnownAs")
                    .HasColumnType("TEXT");

                b.Property<DateTime>("LastActive")
                    .HasColumnType("TEXT");

                b.Property<byte[]>("PasswordHash")
                    .HasColumnType("BLOB");

                b.Property<byte[]>("PasswordSalt")
                    .HasColumnType("BLOB");

                b.Property<string>("Username")
                    .HasColumnType("TEXT");

                b.HasKey("Id");

                b.ToTable("Users");
            });

            modelBuilder.Entity("DatingAPI.Models.Photo", b =>
            {
                b.HasOne("DatingAPI.Models.User", "User")
                    .WithMany("Photos")
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });
#pragma warning restore 612, 618
        }
    }
}